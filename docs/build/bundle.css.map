{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "LayerCake.svelte",
    "Html.svelte",
    "ScaledSvg.svelte",
    "Svg.svelte",
    "Offcanvas.svelte",
    "AreaChart.svelte",
    "BarChart.svelte",
    "Annotations.svelte",
    "AxisX.svelte",
    "AxisY.svelte",
    "Bar.Labels.svelte",
    "Demo.svelte",
    "Scatter.Labels.svelte",
    "Scatter.svelte",
    "Boundary.svelte",
    "Icon.svelte",
    "Cover.svelte",
    "Section1.svelte",
    "Section2.svelte",
    "Section3.svelte",
    "Section4.svelte",
    "Section5.svelte",
    "Section6.svelte",
    "Text.svelte",
    "Footer.svelte",
    "Header.svelte"
  ],
  "sourcesContent": [
    "<script>\n\timport { setContext } from 'svelte';\n\timport { writable, derived } from 'svelte/store';\n\n\timport makeAccessor from './utils/makeAccessor.js';\n\timport filterObject from './utils/filterObject.js';\n\timport calcExtents from './lib/calcExtents.js';\n\timport calcDomain from './helpers/calcDomain.js';\n\timport createScale from './helpers/createScale.js';\n\timport createGetter from './helpers/createGetter.js';\n\timport getRange from './helpers/getRange.js';\n\timport defaultScales from './settings/defaultScales.js';\n\timport defaultReverses from './settings/defaultReverses.js';\n\n\texport let ssr = false;\n\texport let pointerEvents = true;\n\texport let position = 'relative';\n\texport let percentRange = false;\n\n\texport let width = undefined;\n\texport let height = undefined;\n\n\texport let containerWidth = width || 100;\n\texport let containerHeight = height || 100;\n\n\t/* --------------------------------------------\n\t * Parameters\n\t * Values that computed properties are based on and that\n\t * can be easily extended from config values\n\t *\n\t */\n\texport let x = undefined;\n\texport let y = undefined;\n\texport let z = undefined;\n\texport let r = undefined;\n\texport let custom = {};\n\texport let data = [];\n\texport let xDomain = undefined;\n\texport let yDomain = undefined;\n\texport let zDomain = undefined;\n\texport let rDomain = undefined;\n\texport let xNice = false;\n\texport let yNice = false;\n\texport let zNice = false;\n\texport let rNice = false;\n\texport let xReverse = defaultReverses.x;\n\texport let yReverse = defaultReverses.y;\n\texport let zReverse = defaultReverses.z;\n\texport let rReverse = defaultReverses.r;\n\texport let xPadding = undefined;\n\texport let yPadding = undefined;\n\texport let zPadding = undefined;\n\texport let rPadding = undefined;\n\texport let xScale = defaultScales.x;\n\texport let yScale = defaultScales.y;\n\texport let zScale = defaultScales.y;\n\texport let rScale = defaultScales.r;\n\texport let xRange = undefined;\n\texport let yRange = undefined;\n\texport let zRange = undefined;\n\texport let rRange = undefined;\n\texport let padding = {};\n\texport let extents = {};\n\texport let flatData = undefined;\n\n\t/* --------------------------------------------\n\t * Preserve a copy of our passed in settings before we modify them\n\t * Return this to the user's context so they can reference things if need be\n\t * Add the active keys since those aren't on our settings object.\n\t * This is mostly an escape-hatch\n\t */\n\tconst config = {};\n\t$: if (x) config.x = x;\n\t$: if (y) config.y = y;\n\t$: if (z) config.z = z;\n\t$: if (r) config.r = r;\n\t$: if (xDomain) config.xDomain = xDomain;\n\t$: if (yDomain) config.yDomain = yDomain;\n\t$: if (zDomain) config.zDomain = zDomain;\n\t$: if (rDomain) config.rDomain = rDomain;\n\t$: if (xRange) config.xRange = xRange;\n\t$: if (yRange) config.yRange = yRange;\n\t$: if (zRange) config.zRange = zRange;\n\t$: if (rRange) config.rRange = rRange;\n\n\t/* --------------------------------------------\n\t * Make store versions of each parameter\n\t * Prefix these with `_` to keep things organized\n\t */\n\tconst _percentRange = writable();\n\tconst _containerWidth = writable();\n\tconst _containerHeight = writable();\n\tconst _x = writable();\n\tconst _y = writable();\n\tconst _z = writable();\n\tconst _r = writable();\n\tconst _custom = writable();\n\tconst _data = writable();\n\tconst _xDomain = writable();\n\tconst _yDomain = writable();\n\tconst _zDomain = writable();\n\tconst _rDomain = writable();\n\tconst _xNice = writable();\n\tconst _yNice = writable();\n\tconst _zNice = writable();\n\tconst _rNice = writable();\n\tconst _xReverse = writable();\n\tconst _yReverse = writable();\n\tconst _zReverse = writable();\n\tconst _rReverse = writable();\n\tconst _xPadding = writable();\n\tconst _yPadding = writable();\n\tconst _zPadding = writable();\n\tconst _rPadding = writable();\n\tconst _xScale = writable();\n\tconst _yScale = writable();\n\tconst _zScale = writable();\n\tconst _rScale = writable();\n\tconst _xRange = writable();\n\tconst _yRange = writable();\n\tconst _zRange = writable();\n\tconst _rRange = writable();\n\tconst _padding = writable();\n\tconst _flatData = writable();\n\tconst _extents = writable();\n\tconst _config = writable(config);\n\n\t$: _percentRange.set(percentRange);\n\t$: _containerWidth.set(containerWidth);\n\t$: _containerHeight.set(containerHeight);\n\t$: _x.set(makeAccessor(x));\n\t$: _y.set(makeAccessor(y));\n\t$: _z.set(makeAccessor(z));\n\t$: _r.set(makeAccessor(r));\n\t$: _xDomain.set(xDomain);\n\t$: _yDomain.set(yDomain);\n\t$: _zDomain.set(zDomain);\n\t$: _rDomain.set(rDomain);\n\t$: _custom.set(custom);\n\t$: _data.set(data);\n\t$: _xNice.set(xNice);\n\t$: _yNice.set(yNice);\n\t$: _zNice.set(zNice);\n\t$: _rNice.set(rNice);\n\t$: _xReverse.set(xReverse);\n\t$: _yReverse.set(yReverse);\n\t$: _zReverse.set(zReverse);\n\t$: _rReverse.set(rReverse);\n\t$: _xPadding.set(xPadding);\n\t$: _yPadding.set(yPadding);\n\t$: _zPadding.set(zPadding);\n\t$: _rPadding.set(rPadding);\n\t$: _xScale.set(xScale);\n\t$: _yScale.set(yScale);\n\t$: _zScale.set(zScale);\n\t$: _rScale.set(rScale);\n\t$: _xRange.set(xRange);\n\t$: _yRange.set(yRange);\n\t$: _zRange.set(zRange);\n\t$: _rRange.set(rRange);\n\t$: _padding.set(padding);\n\t$: _extents.set(filterObject(extents));\n\t$: _flatData.set(flatData || data);\n\n\t/* --------------------------------------------\n\t * Create derived values\n\t * Suffix these with `_d`\n\t */\n\tconst activeGetters_d = derived([_x, _y, _z, _r], ([$x, $y, $z, $r]) => {\n\t\treturn [\n\t\t\t{ field: 'x', accessor: $x },\n\t\t\t{ field: 'y', accessor: $y },\n\t\t\t{ field: 'z', accessor: $z },\n\t\t\t{ field: 'r', accessor: $r }\n\t\t].filter(d => d.accessor);\n\t});\n\n\tconst padding_d = derived([_padding, _containerWidth, _containerHeight], ([$padding]) => {\n\t\tconst defaultPadding = { top: 0, right: 0, bottom: 0, left: 0 };\n\t\treturn Object.assign(defaultPadding, $padding);\n\t});\n\n\tconst box_d = derived([_containerWidth, _containerHeight, padding_d], ([$containerWidth, $containerHeight, $padding]) => {\n\t\tconst b = {};\n\t\tb.top = $padding.top;\n\t\tb.right = $containerWidth - $padding.right;\n\t\tb.bottom = $containerHeight - $padding.bottom;\n\t\tb.left = $padding.left;\n\t\tb.width = b.right - b.left;\n\t\tb.height = b.bottom - b.top;\n\t\tif (b.width <= 0) {\n\t\t\tconsole.error('[LayerCake] Target div has zero or negative width. Did you forget to set an explicit width in CSS on the container?');\n\t\t}\n\t\tif (b.height <= 0) {\n\t\t\tconsole.error('[LayerCake] Target div has zero or negative height. Did you forget to set an explicit height in CSS on the container?');\n\t\t}\n\t\treturn b;\n\t});\n\n\tconst width_d = derived([box_d], ([$box]) => {\n\t\treturn $box.width;\n\t});\n\n\tconst height_d = derived([box_d], ([$box]) => {\n\t\treturn $box.height;\n\t});\n\n\t/* --------------------------------------------\n\t * Calculate extents by taking the extent of the data\n\t * and filling that in with anything set by the user\n\t */\n\tconst extents_d = derived([_flatData, activeGetters_d, _extents], ([$flatData, $activeGetters, $extents]) => {\n\t\treturn { ...calcExtents($flatData, $activeGetters.filter(d => !$extents[d.field])), ...$extents };\n\t});\n\n\tconst xDomain_d = derived([extents_d, _xDomain], calcDomain('x'));\n\tconst yDomain_d = derived([extents_d, _yDomain], calcDomain('y'));\n\tconst zDomain_d = derived([extents_d, _zDomain], calcDomain('z'));\n\tconst rDomain_d = derived([extents_d, _rDomain], calcDomain('r'));\n\n\tconst xScale_d = derived([_xScale, extents_d, xDomain_d, _xPadding, _xNice, _xReverse, width_d, height_d, _xRange, _percentRange], createScale('x'));\n\tconst xGet_d = derived([_x, xScale_d], createGetter);\n\n\tconst yScale_d = derived([_yScale, extents_d, yDomain_d, _yPadding, _yNice, _yReverse, width_d, height_d, _yRange, _percentRange], createScale('y'));\n\tconst yGet_d = derived([_y, yScale_d], createGetter);\n\n\tconst zScale_d = derived([_zScale, extents_d, zDomain_d, _zPadding, _zNice, _zReverse, width_d, height_d, _zRange, _percentRange], createScale('z'));\n\tconst zGet_d = derived([_z, zScale_d], createGetter);\n\n\tconst rScale_d = derived([_rScale, extents_d, rDomain_d, _rPadding, _rNice, _rReverse, width_d, height_d, _rRange, _percentRange], createScale('r'));\n\tconst rGet_d = derived([_r, rScale_d], createGetter);\n\n\tconst xRange_d = derived([xScale_d], getRange);\n\tconst yRange_d = derived([yScale_d], getRange);\n\tconst zRange_d = derived([zScale_d], getRange);\n\tconst rRange_d = derived([rScale_d], getRange);\n\n\tconst aspectRatio_d = derived([width_d, height_d], ([$aspectRatio, $width, $height]) => {\n\t\treturn $width / $height;\n\t});\n\n\t$: context = {\n\t\tactiveGetters: activeGetters_d,\n\t\twidth: width_d,\n\t\theight: height_d,\n\t\tpercentRange: _percentRange,\n\t\taspectRatio: aspectRatio_d,\n\t\tcontainerWidth: _containerWidth,\n\t\tcontainerHeight: _containerHeight,\n\t\tx: _x,\n\t\ty: _y,\n\t\tz: _z,\n\t\tr: _r,\n\t\tcustom: _custom,\n\t\tdata: _data,\n\t\txNice: _xNice,\n\t\tyNice: _yNice,\n\t\tzNice: _zNice,\n\t\trNice: _rNice,\n\t\txReverse: _xReverse,\n\t\tyReverse: _yReverse,\n\t\tzReverse: _zReverse,\n\t\trReverse: _rReverse,\n\t\txPadding: _xPadding,\n\t\tyPadding: _yPadding,\n\t\tzPadding: _zPadding,\n\t\trPadding: _rPadding,\n\t\tpadding: padding_d,\n\t\tflatData: _flatData,\n\t\textents: extents_d,\n\t\txDomain: xDomain_d,\n\t\tyDomain: yDomain_d,\n\t\tzDomain: zDomain_d,\n\t\trDomain: rDomain_d,\n\t\txRange: xRange_d,\n\t\tyRange: yRange_d,\n\t\tzRange: zRange_d,\n\t\trRange: rRange_d,\n\t\tconfig: _config,\n\t\txScale: xScale_d,\n\t\txGet: xGet_d,\n\t\tyScale: yScale_d,\n\t\tyGet: yGet_d,\n\t\tzScale: zScale_d,\n\t\tzGet: zGet_d,\n\t\trScale: rScale_d,\n\t\trGet: rGet_d\n\t};\n\n\t$: setContext('LayerCake', context);\n</script>\n\n{#if (ssr === true || typeof window !== 'undefined')}\n\t<div\n\t\tclass=\"layercake-container\"\n\t\tstyle=\"\n\t\t\tposition:{position};\n\t\t\t{position === 'absolute' ? 'top:0;right:0;bottom:0;left:0;' : ''}\n\t\t\t{pointerEvents === false ? 'pointer-events:none;' : ''}\n\t\t\"\n\t\tbind:clientWidth={containerWidth}\n\t\tbind:clientHeight={containerHeight}\n\t>\n\t\t<slot\n\t\t\twidth={$width_d}\n\t\t\theight={$height_d}\n\t\t\taspectRatio={$aspectRatio_d}\n\t\t\tcontainerWidth={$_containerWidth}\n\t\t\tcontainerHeight={$_containerHeight}\n\t\t></slot>\n\t</div>\n{/if}\n\n<style>\n\t.layercake-container,\n\t.layercake-container :global(*) {\n\t\tbox-sizing: border-box;\n\t}\n\t.layercake-container {\n\t\twidth: 100%;\n\t\theight: 100%;\n\t}</style>\n",
    "<script>\n\timport { getContext } from 'svelte';\n\n\texport let zIndex = undefined;\n\texport let pointerEvents = undefined;\n\n\tlet zIndexStyle = '';\n\t$: zIndexStyle = typeof zIndex !== 'undefined' ? `z-index:${zIndex};` : '';\n\n\tlet pointerEventsStyle = '';\n\t$: pointerEventsStyle = pointerEvents === false ? 'pointer-events:none;' : '';\n\n\tconst { padding } = getContext('LayerCake');\n</script>\n\n<div\n\tclass=\"layercake-layout-html\"\n\tstyle=\"top: {$padding.top}px; right:{$padding.right}px; bottom:{$padding.bottom}px; left:{$padding.left}px;{zIndexStyle}{pointerEventsStyle}\"\n>\n\t<slot></slot>\n</div>\n\n<style>\n\tdiv,\n\tslot {\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\t}</style>\n",
    "<script>\n\timport { getContext } from 'svelte';\n\n\texport let fixedAspectRatio = 1;\n\texport let viewBox = `0 0 100 ${100 / fixedAspectRatio}`;\n\texport let zIndex = undefined;\n\texport let pointerEvents = undefined;\n\n\tlet zIndexStyle = '';\n\t$: zIndexStyle = typeof zIndex !== 'undefined' ? `z-index:${zIndex};` : '';\n\n\tlet pointerEventsStyle = '';\n\t$: pointerEventsStyle = pointerEvents === false ? 'pointer-events:none;' : '';\n\n\tconst { padding } = getContext('LayerCake');\n</script>\n\n<svg\n\t{viewBox}\n\tpreserveAspectRatio=\"none\"\n\tstyle=\"top: {$padding.top}px; right:0px; bottom:0px; left:{$padding.left}px;width:calc(100% - {($padding.left + $padding.right)}px);height:calc(100% - {($padding.top + $padding.bottom)}px);{zIndexStyle}{pointerEventsStyle}\"\n>\n\t<defs>\n\t\t<slot name=\"defs\"></slot>\n\t</defs>\n\n\t<slot></slot>\n</svg>\n\n<style>\n\tsvg {\n\t\tposition: absolute;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\toverflow: visible;\n\t}\n\tsvg :global(*) {\n\t\tvector-effect: non-scaling-stroke;\n\t}</style>\n",
    "<script>\n\timport { getContext } from 'svelte';\n\n\texport let viewBox = undefined;\n\texport let zIndex = undefined;\n\texport let pointerEvents = undefined;\n\n\tlet zIndexStyle = '';\n\t$: zIndexStyle = typeof zIndex !== 'undefined' ? `z-index:${zIndex};` : '';\n\n\tlet pointerEventsStyle = '';\n\t$: pointerEventsStyle = pointerEvents === false ? 'pointer-events:none;' : '';\n\n\tconst { containerWidth, containerHeight, padding } = getContext('LayerCake');\n</script>\n<svg\n\tclass=\"layercake-layout-svg\"\n\t{viewBox}\n\twidth={$containerWidth}\n\theight={$containerHeight}\n\tstyle=\"{zIndexStyle}{pointerEventsStyle}\"\n>\n\t<defs>\n\t\t<slot name=\"defs\"></slot>\n\t</defs>\n\t<g transform=\"translate({$padding.left}, {$padding.top})\">\n\t\t<slot></slot>\n\t</g>\n</svg>\n\n<style>\n\tsvg {\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\toverflow: visible;\n\t}</style>\n",
    "<script>\n  import { createEventDispatcher, onMount } from 'svelte';\n  import { fade as fadeTransition } from 'svelte/transition';\n  import InlineContainer from './InlineContainer.svelte';\n  import OffcanvasBody from './OffcanvasBody.svelte';\n  import OffcanvasHeader from './OffcanvasHeader.svelte';\n  import Portal from './Portal.svelte';\n  import classnames, { browserEvent, getTransitionDuration } from './utils';\n\n  const dispatch = createEventDispatcher();\n\n  let className = '';\n  export { className as class };\n  export let backdrop = true;\n  export let container;\n  export let fade = true;\n  export let backdropDuration = fade ? 150 : 0;\n  export let header = undefined;\n  export let isOpen = false;\n  export let placement = 'start';\n  export let scroll = false;\n  export let toggle = undefined;\n\n  // TODO support these like Modals:\n  // export let autoFocus = true;\n  // export let unmountOnClose = true;\n  // TODO focus trap\n\n  let body;\n  let isTransitioning = false;\n  let element;\n  let removeEscListener;\n\n  onMount(() => body = document.body);\n\n  $: if (body) {\n    if (!scroll) {\n      body.classList.toggle('overflow-noscroll', (isOpen || isTransitioning));\n    }\n  }\n  $: if (element) {\n    isOpen = isOpen; // Used to trigger reactive on isOpen changes.\n    isTransitioning = true;\n    dispatch(isOpen ? 'opening' : 'closing');\n    setTimeout(() => {\n      isTransitioning = false;\n      dispatch(isOpen ? 'open' : 'close');\n    }, getTransitionDuration(element));\n  }\n  $: if (isOpen && toggle && (typeof window !== 'undefined')) {\n    removeEscListener = browserEvent(document, 'keydown', (event) => {\n      if (event.key && event.key === 'Escape') toggle();\n    });\n  }\n  $: if (!isOpen && removeEscListener) {\n    removeEscListener();\n  }\n  $: handleMouseDown = (backdrop && toggle && body && isOpen) ? (e) => {\n    if (e.target === body) {\n      toggle();\n    }\n  } : undefined;\n  $: classes = classnames('offcanvas', `offcanvas-${placement}`, className, { show: isOpen });\n  $: outer = (container === 'inline') ? InlineContainer : Portal;\n</script>\n\n<style>\n  :global(.overflow-noscroll) {\n    overflow: hidden;\n    padding-right: 0px;\n  }</style>\n\n<svelte:body on:mousedown={handleMouseDown} />\n\n<svelte:component this={outer}>\n<div\n  {...$$restProps}\n  bind:this={element}\n  aria-hidden={!isOpen ? true : undefined}\n  aria-modal={isOpen ? true : undefined}\n  class={classes}\n  role={(isOpen || isTransitioning) ? 'dialog' : undefined}\n  style={`visibility: ${isOpen || isTransitioning ? 'visible' : 'hidden'}`}\n  tabindex=\"-1\">\n  {#if toggle || header || $$slots.header}\n    <OffcanvasHeader {toggle}>\n      {#if header}\n        <h5 class=\"offcanvas-title\">\n          {header}\n        </h5>\n      {/if}\n      <slot name=\"header\" />\n    </OffcanvasHeader>\n  {/if}\n  <OffcanvasBody>\n    <slot />\n  </OffcanvasBody>\n</div>\n{#if backdrop && isOpen}\n  <div\n    on:click={toggle ? () => toggle() : undefined}\n    transition:fadeTransition={{ duration: backdropDuration }}\n    class={classnames('modal-backdrop', 'show')} />\n{/if}\n</svelte:component>\n",
    "<script>\n    import { LayerCake, Svg, flatten, Html } from 'layercake';\n    import { stack } from 'd3-shape';\n    import { scaleBand } from 'd3-scale';\n    import { scaleOrdinal } from 'd3-scale';\n    import { format, precisionFixed } from 'd3-format';\n  \n    import AxisX from './chart-components/AxisX.svelte';\n    import AxisY from './chart-components/AxisY.svelte';\n    import AreaStacked from './chart-components/AreaStacked.svelte';\n    import Annotations from './chart-components/Annotations.svelte';\n  \n    // This example loads csv data as json using @rollup/plugin-dsv\n    import data from './../../data/data2u.csv';\n  \n    const xKey = 'year';\n    const yKey = [0, 1];\n    const zKey = 'key';\n    const years = [];\n  \n    const seriesNames = Object.keys(data[0]).filter(d => d !== xKey);\n    const seriesColors = ['#31a354', '#addd8e', '#f7fcb9'];\n  \n    data.forEach(d => {\n      seriesNames.forEach(name => {\n        d[name] = +d[name];\n      });\n      years.push(d[xKey]);\n    });\n\n  \n    /* --------------------------------------------\n     * Create a stacked data structure\n     */\n    const stackData = stack()\n      .keys(seriesNames);\n  \n    const series = stackData(data);\n  \n    const formatTickY = d => format(`.${precisionFixed(d)}s`)(d);\n\n    const annotations = [\n    {\n      title: 'Fossil Fuel Royalties between 2016 and 2020 (in $ millions)',\n      top: '-15%',\n      left: '0%',\n      color:\"var(--white)\"\n    },\n    {\n      text: 'Natural gas royalties',\n      top: '75%',\n      left: '35%',\n      color:\"var(--white)\"\n    },\n    {\n      text: 'Oil and Gas Commission fees and levies',\n      top: '36%',\n      left: '20%',\n      color:\"var(--stand-secondary)\"\n    },\n    {\n      text: 'Petroleum royalties',\n      top: '15%',\n      left: '35%',\n      color:\"var(--stand-secondary)\"\n    },\n    {\n      text: '$282M',\n      top: '5%',\n      right: '5%',\n      color:\"var(--white)\"\n    }\n    ]\n  </script>\n  \n  <style>\n    /*\n      The wrapper div needs to have an explicit width and height in CSS.\n      It can also be a flexbox child or CSS grid element.\n      The point being it needs dimensions since the <LayerCake> element will\n      expand to fill it.\n    */\n    .chart-container {\n      width: 100%;\n      height: 100%;\n    }</style>\n  \n  <div class=\"chart-container\">\n    <LayerCake\n      padding={{ top: 0, right: 0, bottom: 20, left: 17 }}\n      x={d => d.data[xKey]}\n      y={yKey}\n      z={zKey}\n      xScale={scaleBand().paddingInner([0.05]).round(true)}\n      xDomain={years}\n      zScale={scaleOrdinal()}\n      zDomain={seriesNames}\n      zRange={seriesColors}\n      flatData={flatten(series)}\n      data={series}\n    >\n      <Svg>\n        <AxisX\n          tickMarks={true}\n          color='var(--white)'\n        />\n        <AxisY\n          formatTick={formatTickY}\n          color='var(--white)'\n        />\n        <AreaStacked/>\n      </Svg>\n      <Html>\n        <Annotations {annotations}/>\n    </Html>\n    </LayerCake>\n  </div>",
    "<script>\n  import { LayerCake, Svg, Html } from 'layercake';\n  import { scaleBand } from 'd3-scale';\n\n  import Column from './chart-components/Column.svelte';\n  import AxisX from './chart-components/AxisX.svelte';\n  import AxisY from './chart-components/AxisY.svelte';\n  import Annotations from './chart-components/Annotations.svelte';\n  import Labels from './chart-components/Bar.Labels.svelte';\n\n  // This example loads csv data as json using @rollup/plugin-dsv\n  import data from './../../data/data1.csv';\n\n  const xKey = 'Year';\n  const yKey = 'Subsidies';\n  const years = [];\n\n\n  const annotations = [\n    {\n      text: 'Fossil Fuel Subsidies since 2016',\n      top: '-10%',\n      left: '0%',\n    },\n    {\n      text: \"BC NDP\",\n      image: 'assets/img/ndp.webp',\n      top:'15%',\n      left: '25%',\n      width: \"80px\"\n    },\n    {\n      icon: 'arrow-right',\n      width: '30',\n      top:'15%',\n      left:'25%',\n      color: \"#F47F27\"\n    }\n  ];\n\n  data.forEach(d => {\n    d[yKey] = +d[yKey];\n    years.push(d[xKey]);\n  });\n\n  var xDomain={years}\n\n</script>\n\n<div class=\"chart-container\">\n  <LayerCake\n    padding={{ top: 0, bottom: 20, left: 35 }}\n    x={xKey}\n    y={yKey}\n    xScale={scaleBand().paddingInner([0.05]).round(true)}\n    xDomain={years}\n    yDomain={[0, null]}\n    data={data}\n  >\n    <Svg>\n      <AxisX\n        gridlines={false}\n      />\n      <AxisY\n        gridlines={true}\n        baseline={true}\n        snapTicks={true}\n      />\n      <Column/>\n    </Svg>\n    <Html>\n      <Annotations {annotations}/>\n      <Labels />\n    </Html>\n  </LayerCake>\n</div>\n\n<style>\n  /*\n    The wrapper div needs to have an explicit width and height in CSS.\n    It can also be a flexbox child or CSS grid element.\n    The point being it needs dimensions since the <LayerCake> element will\n    expand to fill it.\n  */\n  .chart-container {\n    width: 100%;\n    height: 100%;\n    position:relative;\n  }</style>",
    "<script>\n    import { setContext, onMount } from 'svelte';\n    import Icon from \"./../../helpers/Icon.svelte\";\n  \n    const vals = ['top', 'right', 'bottom', 'left'];\n  \n    export let container = undefined;\n    export let annotations = [];\n  \n    $: fillStyle = d => {\n      let style = '';\n      vals.forEach(val => {\n        if (d[val]) {\n          style += `${val}:${d[val]};`;\n        }\n      });\n      return style;\n    };\n  </script>\n  \n  <div class=\"layercake-annotations\" bind:this={container}>\n    {#each annotations as d, i}\n      {#if d.image}\n        <img class=\"layercake-annotation\" src=\"{d.image}\" alt=\"{d.text}\" style=\"z-index:999;width:{d.width};top:{d.top};left:{d.left};\">\n      {:else if d.icon}\n        <div class=\"layercake-annotation\" style=\"border-left:2px solid #F47F27;top:{d.top};left:{d.left};z-index:999;\">\n          <Icon name=\"{d.icon}\" stroke=\"{d.color}\" stroke-width=\"3\" width=\"{d.width}\" height=\"{d.width*2.5}\" />\n        </div>\n        {:else if d.title}\n        <div\n          class=\"layercake-annotation\"\n          data-id=\"{i}\"\n          style=\"{fillStyle(d)};color:{d.color}\"\n        ><h4>{d.title}</h4></div>\n        {:else}\n        <div\n          class=\"layercake-annotation\"\n          data-id=\"{i}\"\n          style=\"{fillStyle(d)};color:{d.color};\"\n        ><p>{d.text}</p></div>\n      {/if}\n      \n    {/each}\n  </div>\n  \n  <style>\n    .layercake-annotation {\n      position: absolute;\n      padding-left:5px;\n    }</style>",
    "<script>\n  import { getContext } from 'svelte';\n\n  const { width, height, xScale, yRange } = getContext('LayerCake');\n\n  export let gridlines = true;\n  export let tickMarks = false;\n  export let formatTick = d => d;\n  export let baseline = false;\n  export let snapTicks = false;\n  export let ticks = undefined;\n  export let xTick = undefined;\n  export let yTick = 16;\n  export let dxTick = 0;\n  export let dyTick = 0;\n  export let color = undefined;\n\n  $: isBandwidth = typeof $xScale.bandwidth === 'function';\n\n  $: tickVals = Array.isArray(ticks) ? ticks :\n    isBandwidth ?\n      $xScale.domain() :\n      typeof ticks === 'function' ?\n        ticks($xScale.ticks()) :\n          $xScale.ticks(ticks);\n\n  function textAnchor(i) {\n    if (snapTicks === true) {\n      if (i === 0) {\n        return 'start';\n      }\n      if (i === tickVals.length - 1) {\n        return 'end';\n      }\n    }\n    return 'middle';\n  }\n</script>\n\n<g class='axis x-axis' class:snapTicks>\n  {#each tickVals as tick, i}\n    <g class='tick tick-{ i }' transform='translate({$xScale(tick)},{$yRange[0]})'>\n      {#if gridlines !== false}\n        <line class=\"gridline\" y1='{$height * -1}' y2='0' x1='0' x2='0'></line>\n      {/if}\n      {#if tickMarks === true}\n        <line class=\"tick-mark\" y1='{0}' y2='{6}' x1='{xTick || isBandwidth ? $xScale.bandwidth() / 2 : 0}' x2='{xTick || isBandwidth ? $xScale.bandwidth() / 2 : 0}'></line>\n      {/if}\n      <text\n        x=\"{xTick || isBandwidth ? $xScale.bandwidth() / 2 : 0}\"\n        y='{yTick}'\n        dx='{dxTick}'\n        dy='{dyTick}'\n        style='--text-color: {color};'\n        text-anchor='{textAnchor(i)}'>{formatTick(tick)}\n        </text>\n    </g>\n  {/each}\n  {#if baseline === true}\n    <line class=\"baseline\" y1='{$height + 0.5}' y2='{$height + 0.5}' x1='0' x2='{$width}'></line>\n  {/if}\n</g>\n\n<style>\n  .tick {\n    font-size: .725em;\n    font-weight: 200;\n  }\n\n  line,\n  .tick line {\n    stroke: #aaa;\n    stroke-dasharray: 2;\n  }\n\n  .tick text {\n    fill: var(--text-color);\n    font-family: var(--bs-font-sans-serif);\n    font-size:1rem;\n    font-weight:bold;\n  }\n\n  .tick .tick-mark,\n  .baseline {\n    stroke-dasharray: 0;\n  }\n  /* This looks slightly better */\n  .axis.snapTicks .tick:last-child text {\n    transform: translateX(3px);\n  }\n  .axis.snapTicks .tick.tick-0 text {\n    transform: translateX(-3px);\n  }</style>",
    "<script>\n  import { getContext } from 'svelte';\n\n  const { padding, xRange, yScale } = getContext('LayerCake');\n\n  export let ticks = 4;\n  export let tickMarks = false;\n  export let gridlines = true;\n  export let formatTick = d => d;\n  export let xTick = 0;\n  export let yTick = 0;\n  export let dxTick = 0;\n  export let dyTick = -4;\n  export let textAnchor = 'start';\n  export let color = undefined;\n\n  $: isBandwidth = typeof $yScale.bandwidth === 'function';\n\n  $: tickVals = Array.isArray(ticks) ? ticks :\n    isBandwidth ?\n      $yScale.domain() :\n      typeof ticks === 'function' ?\n        ticks($yScale.ticks()) :\n          $yScale.ticks(ticks);\n</script>\n\n<g class='axis y-axis' transform='translate({-$padding.left}, 0)'>\n  {#each tickVals as tick, i}\n    <g class='tick tick-{tick}' transform='translate({$xRange[0] + (isBandwidth ? $padding.left : 0)}, {$yScale(tick)})'>\n      {#if gridlines !== false}\n        <line\n          class=\"gridline\"\n          x2='100%'\n          y1={yTick + (isBandwidth ? ($yScale.bandwidth() / 2) : 0)}\n          y2={yTick + (isBandwidth ? ($yScale.bandwidth() / 2) : 0)}\n        ></line>\n      {/if}\n      {#if tickMarks === true}\n        <line\n          class='tick-mark'\n          x1='0'\n          x2='{isBandwidth ? -6 : 6}'\n          y1={yTick + (isBandwidth ? ($yScale.bandwidth() / 2) : 0)}\n          y2={yTick + (isBandwidth ? ($yScale.bandwidth() / 2) : 0)}\n        ></line>\n      {/if}\n      <text\n        x='{xTick}'\n        y='{yTick + (isBandwidth ? $yScale.bandwidth() / 2 : 0)}'\n        dx='{isBandwidth ? -9 : dxTick}'\n        dy='{isBandwidth ? 4 : dyTick}'\n        style=\"text-anchor:{isBandwidth ? 'end' : textAnchor};--text-color: {color};\"\n      >{formatTick(tick)}</text>\n    </g>\n  {/each}\n</g>\n\n<style>\n  .tick {\n    font-size: .725em;\n    font-weight: 200;\n  }\n\n  .tick line {\n    stroke: #aaa;\n  }\n  .tick .gridline {\n    stroke-dasharray: 2;\n  }\n\n  .tick text {\n    fill:var(--text-color);\n    font-family: var(--bs-font-sans-serif);\n  }\n\n  .tick.tick-0 line {\n    stroke-dasharray: 0;\n  }</style>",
    "<script>\n  // Import the getContext function from svelte\n  import { getContext } from \"svelte\";\n\n  // Access the context using the 'LayerCake' keyword\n  // Grab some helpful functions\n  const { data, xGet, yGet, xScale } = getContext(\"LayerCake\");\n  function pickLabel(d) {\n    if (d.Year == '16/17' || d.Year == '17/18' || d.Year == '18/19') {\n      return \"$\"+Math.round((d.Subsidies) * 100) / 100+\"M\";\n    } else {\n      return \"$\"+Math.round((d.Subsidies/1000) * 100) / 100+\"B\";\n    }\n    \n  }\n</script>\n\n\n  {#each $data as d}\n    <p style=\"left: {$xGet(d)+$xScale.bandwidth()/2}px; top: {$yGet(d)}px;\">{pickLabel(d)}</p>\n  {/each}\n\n\n<style>\n\tp {\n    font-size:0.7rem;\n    font-weight:bold;\n\t\tposition: absolute;\n    font-family: var(--bs-font-sans-serif);\n\t\tmargin: 0;\n\t\tline-height: 1;\n\t\ttransform: translate(-50%, 50%);\n\t}</style>",
    "<script>\n  import { onMount } from \"svelte\";\n  import Scatter from \"./Scatter.svelte\";\n  import Icon from \"../helpers/Icon.svelte\";\n  import sampleData from \"../../data/demo/sample.csv\";\n  import copyData from \"../../data/demo/copy.json\";\n  import Boundary from \"../helpers/Boundary.svelte\";\n</script>\n\n\n\n<section id=\"demo\">\n  <Boundary left_spacing={23} color=\"var(--white)\"/>\n  <!-- copy from google doc -->\n  <div>\n    <h1>{copyData.headline}</h1>\n  </div>\n\n  <div>\n    <p>\n      Hello svelter! Here is an inline svg icon:\n      <!-- icon from tabler (see styling in global.css) -->\n      <Icon name=\"feather\" />\n    </p>\n  </div>\n\n  <div>\n    <p>A table from CSV data</p>\n    <table>\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Value</th>\n        </tr>\n      </thead>\n      <tbody>\n        <!-- data from csv -->\n        {#each sampleData as { name, value }}\n          <tr>\n            <td>{name}</td>\n            <td>{value}</td>\n          </tr>\n        {/each}\n      </tbody>\n    </table>\n  </div>\n\n  <div>\n    <p>An image from \"public/assets\"</p>\n    <!-- image from public/assets -->\n    <img alt=\"sad toast\" src=\"assets/toast.png\" />\n  </div>\n\n  <div>\n    <p>A server-side rendered chart using Layercake</p>\n    <!-- chart using Layercake -->\n    <Scatter />\n  </div>\n\n  <div>\n    <h1>Heading 1</h1>\n    <h2>Heading 2</h2>\n    <h3>Heading 3</h3>\n    <h4>Heading 4</h4>\n    <h5>Heading 5</h5>\n    <h6>Heading 6</h6>\n    <p>\n      This is a paragraph with a <strong>strong</strong> tag and an\n      <em>em</em> tag. And here is a <mark>mark</mark> tag. Oh and a\n      <a href=\"#demo\">link</a> tag.\n    </p>\n  </div>\n\n  <div>\n    <p>Some Elements:</p>\n    <p><button>Button</button></p>\n    <p>\n      <select>\n        <option>Select</option>\n        <option>Thing 1</option>\n        <option>Thing 2</option>\n      </select>\n    </p>\n    <p><input placeholder=\"input\" /></p>\n    <p><input type=\"range\" /></p>\n  </div>\n</section>\n\n<style>\n\n  div {\n    margin-bottom: 2rem;\n  }\n\n  img {\n    width: 20rem;\n  }\n\n  td:nth-child(2),\n  th:nth-child(2) {\n    text-align: right;\n    padding: 0.5em;\n  }</style>\n",
    "<script>\n  // Import the getContext function from svelte\n  import { getContext } from \"svelte\";\n\n  // Access the context using the 'LayerCake' keyword\n  // Grab some helpful functions\n  const { data, xGet, yGet } = getContext(\"LayerCake\");\n</script>\n\n\n  {#each $data as d}\n    <p style=\"left: {$xGet(d)}%; top: {$yGet(d)}%;\">{d.text}</p>\n  {/each}\n\n\n<style>\n\tp {\n\t\tposition: absolute;\n\t\tmargin: 0;\n\t\tline-height: 1;\n\t\ttransform: translate(-50%, 50%);\n\t}</style>",
    "<script>\n  import { LayerCake, ScaledSvg, Html } from \"layercake\";\n  import Dots from \"./Scatter.Dots.svelte\";\n  import Labels from \"./Scatter.Labels.svelte\";\n\n  const points = [\n    { x: 0, y: 1, text: \"A\" },\n    { x: 10, y: 5, text: \"B\" },\n    { x: 15, y: 10, text: \"C\" },\n  ];\n\n  const fixedAspectRatio = 1;\n</script>\n\n<div class=\"chart-container\">\n  <figure style=\"padding-bottom: {100 / fixedAspectRatio}%\">\n    <LayerCake\n      data=\"{points}\"\n      x=\"x\"\n      y=\"y\"\n      position=\"absolute\"\n      ssr=\"{true}\"\n      percentRange=\"{true}\"\n      fixedAspectRatio=\"{fixedAspectRatio}\"\n    >\n      <ScaledSvg>\n        <Dots r=\"{4}\" scaled=\"{false}\" />\n      </ScaledSvg>\n      <Html>\n        <Labels />\n      </Html>\n    </LayerCake>\n  </figure>\n</div>\n\n<style>\n  .chart-container {\n    width: 50%;\n    max-width: 480px;\n  }\n\n  figure {\n    position: relative;\n    width: 100%;\n  }</style>\n",
    "<script>\n    export let left_spacing = \"310\";\n    export let color = \"var(--white)\";\n    export let orientation = \"triangle\";\n  </script>\n\n{#if orientation == \"triangle\"}\n    <div class=\"arrow-down\" style=\"--boundary-color: {color};--left-spacing: {left_spacing}%;\"></div>  \n{:else}\n    <div class=\"overlay\" style=\"--boundary-color: {color}; --left-spacing: {left_spacing}%;--right-spacing: {left_spacing-2}%;--right-spacing-mobile: {left_spacing-5}%;\"></div>\n{/if}\n\n\n  <style>\n\n    .arrow-down {\n        width: 0; \n        height: 0; \n        border-left: 30px solid transparent;\n        border-right: 30px solid transparent;\n        z-index: var(--z-top);\n        border-top: 35px solid var(--boundary-color);\n        margin-left: var(--left-spacing);\n    }\n  \n    .overlay { position: relative; height:50px; top:-45px; bottom:0px;overflow:hidden;}\n    \n    @media (min-width:741px) {\n        .overlay:after,  .overlay:before { content: ''; display: block; height: 50px; background: var(--boundary-color); position: absolute; bottom: 0;}\n        .overlay:before { width: var(--left-spacing); left: -50px; transform: skewX(40deg); }\n\t.overlay:after { width: 100%; left: var(--right-spacing); transform: skewX(-40deg); overflow:hidden; }\n    }\n\n    @media (max-width:741px) {\n\t    .overlay:after,  .overlay:before { content: ''; display: block; height: 50px; background: var(--boundary-color); position: absolute; bottom: 0;}\n        .overlay:before { width: var(--left-spacing); left: -50px; transform: skewX(40deg); }\n\t.overlay:after { width: 100%; left: var(--right-spacing-mobile); transform: skewX(-40deg); }\n    }</style>\n  ",
    "<script>\n  import feather from \"feather-icons\";\n  export const directions = [\"n\", \"ne\", \"e\", \"se\", \"s\", \"sw\", \"w\", \"nw\"];\n\n  export let name;\n  export let direction = \"n\";\n  export let strokeWidth;\n  export let stroke;\n  export let width = \"1em\";\n  export let height = \"1em\";\n\n  $: icon = feather.icons[name];\n  $: rotation = directions.indexOf(direction) * 45;\n  $: if (icon) {\n    if (stroke) icon.attrs[\"stroke\"] = stroke;\n    if (strokeWidth) icon.attrs[\"stroke-width\"] = strokeWidth;\n  }\n</script>\n\n{#if icon}\n  <svg\n    {...icon.attrs}\n    style=\"width: {width}; height: {height}; transform: rotate({rotation}deg);\"\n  >\n    <g>\n      {@html icon.contents}\n    </g>\n  </svg>\n{/if}\n\n<style>\n  svg {\n    width: 1em;\n    height: 1em;\n    overflow: visible;\n    transform-origin: 50% 50%;\n  }</style>\n",
    "<script>\n    import Icon from \"../helpers/Icon.svelte\";\n    import viewport from \"../../stores/viewport.js\";\n    import Header from \"../stand/Header.svelte\";\n    import summary from \"./../../data/summary.json\";\n    import { Col, Container, Row } from 'sveltestrap';\n  </script>\n  \n  <section class=\"cover overlay\" style=\"height:{$viewport.height-80}px; background-image:url('assets/img/cover4.png')\">\n    <Header />\n      <div class=\"cover-content align-middle\">\n        <Container>\n            <Row>\n              <Col sm=12 md=10 lg=12>\n                <h1>{summary.title}</h1>\n              </Col>\n            <Col sm=12 md=6 lg=8>\n                <h2>{@html summary.subtitle}</h2>\n            </Col>\n            <Col sm=12 md=10 lg=12>\n                <div class=\"pdf-share social-share\">\n                    <a href=\"#\"><button>DOWNLOAD PDF <Icon name=\"download\" stroke=\"var(--white)\" stroke-width=2 width=\"40\" /></button></a>\n                    <a href=\"#\"><button class=\"facebook\"><Icon name=\"facebook\" stroke=\"var(--white)\" stroke-width=2 width=\"30\" />Share on Facebook</button></a>\n                    <a href=\"#\"><button class=\"twitter\"><Icon name=\"twitter\" stroke=\"var(--white)\" stroke-width=2 width=\"30\"/>Share on Twitter</button></a>\n                </div>\n                <div class=\"social-share\">\n                    \n                </div>\n              </Col>\n            </Row>\n          </Container>\n        \n        \n        \n    </div>\n  </section>\n  \n  <style>\n    .cover { \n        background-position:cover;\n        width:100%;\n        min-width:200px;\n        background-position: center; /* Center the image */\n        background-repeat: no-repeat; /* Do not repeat the image */\n        background-size: cover;\n    }\n\n    .cover-content {\n        padding-top:160px;\n    }\n\n\n    h1 {\n        font-family:'Montserrat Bold',Helvetica;\n        text-align:left;\n        color:#fff;\n        font-weight:bold;\n    }\n\n    h2 {\n        font-family:'Montserrat',Helvetica;\n        font-style:italic;\n        font-weight:lighter;\n        color:#fff;\n    }\n    .social-share {\n        margin-top:20px;\n        text-align:left;\n    }\n\n    .pdf-share {\n        margin-top:40px;\n    }\n\n    button {\n        background:var(--stand-primary);\n        margin-right:20px;\n    }\n    \n    button svg {\n        padding:30px;\n    }\n\n    button.facebook {\n        background:#4267B2;\n        padding-right:20px;\n        margin-top:20px;\n    }\n    button.twitter {\n        background:#1DA1F2;\n        margin-top:20px;\n        padding-right:20px;\n    }\n\n    button:hover {\n        background:var(--stand-secondary);\n    }\n\n    @media (max-width:741px) {\n        .cover-content {padding-top:50px;margin-left:auto;margin-right:auto;}\n    }</style>\n  ",
    "<script>\n    import Boundary from \"../helpers/Boundary.svelte\";\n    import Text from \"./Text.svelte\";\n    import summary from \"./../../data/summary.json\";\n    import BarChart from \"./../charts/BarChart.svelte\";\n    import { Col, Container, Row } from 'sveltestrap';\n    export let boundary_orientation, background, left_spacing, color;\n  </script>\n  \n  <section class=\"copy\" style=\"--section-background: {background};\">\n    {#if boundary_orientation != \"none\"}\n      <Boundary left_spacing={left_spacing} color={background} orientation={boundary_orientation}/>  \n    {/if}\n    <Container>\n      <Row>\n        <Col sm=12 md=6>\n          <div class=\"section-copy\">\n            <Text headline={summary.section_1_headline} copy={summary.section_1_copy} {color}/>\n          </div>\n        </Col>\n        <Col sm=12 md=6>\n          <div class=\"section-chart\">\n            <BarChart />\n          </div>\n        </Col>\n      </Row>\n    </Container>\n  </section>\n  \n  <style>\n    section {\n        background: var(--section-background);\n        padding-bottom:4rem;\n        width:100%;\n    }\n    .section-chart {\n      width:100%;\n      height:100%;\n      min-height:400px;\n      padding-left:5%;\n    }</style>\n  ",
    "<script>\n    import Icon from \"../helpers/Icon.svelte\";\n    import Boundary from \"../helpers/Boundary.svelte\";\n    import Text from \"./Text.svelte\";\n    import summary from \"./../../data/summary.json\";\n    import AreaChart from \"./../charts/AreaChart.svelte\";\n    import { Col, Container, Row } from 'sveltestrap';\n    export let boundary_orientation, background, left_spacing, color;\n  </script>\n  \n  \n  <section class=\"copy\" style=\"--section-background: {background};\">\n    {#if boundary_orientation != \"none\"}\n      <Boundary left_spacing={left_spacing} color={background} orientation={boundary_orientation}/>  \n    {/if}\n    <Container>\n      <Row>\n        <Col sm=12 md=6>\n          <div class=\"section-chart\">\n            <AreaChart />\n          </div>\n        </Col>\n        <Col sm=12 md=6>\n          <div class=\"section-copy\">\n            <Text headline={summary.section_2_headline} copy={summary.section_2_copy} {color}/>\n          </div>\n        </Col>\n      </Row>\n    </Container>\n  </section>\n  \n  <style>\n    .copy {\n        background: var(--section-background);\n        padding-bottom:4rem;\n    }\n    .section-chart {\n      width:100%;\n      height:80%;\n      margin-top:100px;\n      min-height:400px;\n    }</style>\n  ",
    "<script>\n    import Icon from \"../helpers/Icon.svelte\";\n    import Boundary from \"../helpers/Boundary.svelte\";\n    import Text from \"./Text.svelte\";\n    import summary from \"./../../data/summary.json\";\n    import { Col, Container, Row } from 'sveltestrap';\n    export let boundary_orientation, background, left_spacing, color;\n  </script>\n  \n  \n  <section class=\"copy\" style=\"--section-background: {background};\">\n    {#if boundary_orientation != \"none\"}\n      <Boundary left_spacing={left_spacing} color={background} orientation={boundary_orientation}/>  \n    {/if}\n    \n    <div class=\"section-copy\">\n      <Text copy={summary.section_3_copy} {color}/>\n    </div>\n    <div id=\"horgan-cover\" style=\"background-image:url('assets/img/horgan.webp');\"></div>\n  </section>\n  <style>\n    .row {\n      margin-right:0px !important;\n      margin-left:0px !important;\n    }\n    .copy {\n        background: var(--section-background);        \n        min-height:500px;\n    }\n\n    .section-copy {\n      padding:30px;\n      width:40%;\n      float:left;\n    }\n\n    #horgan-cover { \n      float:right;\n      width:60%;\n      min-height:500px;\n      height:100%;\n      background-position:cover;\n      background-position: center; /* Center the image */\n      background-repeat: no-repeat; /* Do not repeat the image */\n      background-size: cover;\n    }</style>\n  ",
    "<script>\n    import Icon from \"../helpers/Icon.svelte\";\n    import Boundary from \"../helpers/Boundary.svelte\";\n    import Text from \"./Text.svelte\";\n    import summary from \"./../../data/summary.json\";\n    import { Col, Container, Row } from 'sveltestrap';\n    export let boundary_orientation, background, left_spacing, color;\n  </script>\n  \n  \n  <section class=\"copy\" style=\"--section-background: {background};\">\n    {#if boundary_orientation != \"none\"}\n      <Boundary left_spacing={left_spacing} color=var(--stand-primary) orientation={boundary_orientation}/>  \n    {/if}\n    <Container>\n      <Row>\n        <Col sm=10>\n          <div class=\"section-copy\">\n            <Text headline={summary.section_4_headline} copy={summary.section_4_copy} {color}/>\n          </div>\n        </Col>\n        <Col sm={{size:8, offset:4}}>\n          <div class=\"section-chart\">\n            \n          </div>\n        </Col>\n        <Col sm=10>\n          <div class=\"section-copy\">\n            <Text copy={summary.section_4_copy_2} {color}/>\n          </div>\n        </Col>\n      </Row>\n    </Container>\n    <div id=\"flare\" style=\"background-image:url('assets/img/flare.jpeg');width:100%;\">\n    <Container>\n        <Row>\n      <Col sm=12 lg=6>\n        <div class=\"section-copy\">\n          <Text copy={summary.section_4_copy_3} color=\"#fff\"/>\n        </div>\n      </Col>\n    </Row>\n  </Container>\n    </div>\n    \n  </section>\n  \n  <style>\n    .copy {\n        background: var(--section-background);\n    }\n\n    #flare {\n        padding-bottom:4rem;\n        padding-top:2rem;\n        background-position:cover;\n        width:100%;\n        min-height:100px;\n        background-position: center; /* Center the image */\n        background-repeat: no-repeat; /* Do not repeat the image */\n        background-size: cover;\n    }\n\n    #flare .section-copy {\n      background:rgba(0,0,0,0.5);\n      padding-left:20px;\n    }\n\n    .section-chart {\n      background:#bbb;\n      height:20px;\n      width:100%;\n    }\n\n    .section-copy {\n      padding-top:30px;\n    }</style>\n  ",
    "<script>\n    import Icon from \"../helpers/Icon.svelte\";\n    import Boundary from \"../helpers/Boundary.svelte\";\n    import Text from \"./Text.svelte\";\n    import summary from \"./../../data/summary.json\";\n    import { Col, Container, Row } from 'sveltestrap';\n    export let boundary_orientation, background, left_spacing, color;\n  </script>\n  \n  \n  <section class=\"copy\" style=\"--section-background: {background};\">\n    {#if boundary_orientation != \"none\"}\n      <Boundary left_spacing={left_spacing} color={background} orientation={boundary_orientation}/>  \n    {/if}\n    <Container>\n      <Row>\n        <Col sm={{size:8, offset:4}}>\n          <div class=\"section-copy\">\n            <Text headline={summary.section_5_headline} copy={summary.section_5_copy} {color}/>\n          </div>\n        </Col>\n        <Col sm=8>\n          <div class=\"section-chart\">\n            \n          </div>\n        </Col>\n        <Col sm={{size:8, offset:2}}>\n          <div class=\"section-copy\" style=\"text-align:center;\">\n            <Text copy={summary.section_5_copy_2} {color}/>\n          </div>\n        </Col>\n\n      </Row>\n    </Container>\n  </section>\n  \n  <style>\n    .copy {\n        background: var(--section-background);\n    }\n\n    .section-chart {\n      background:#bbb;\n      height:20px;\n      width:100%;\n    }\n\n    .section-copy {\n      padding-top:30px;\n    }</style>\n  ",
    "<script>\n    import Icon from \"../helpers/Icon.svelte\";\n    import Boundary from \"../helpers/Boundary.svelte\";\n    import Text from \"./Text.svelte\";\n    import summary from \"./../../data/summary.json\";\n    import { Col, Container, Row, Accordion, AccordionHeader, AccordionItem } from 'sveltestrap';\n    export let boundary_orientation, background, left_spacing, color;\n  </script>\n  \n  \n  <section class=\"copy-recommendations\" style=\"background-image:url('assets/img/cover.jpeg');\">\n    {#if boundary_orientation != \"none\"}\n      <Boundary left_spacing={left_spacing} color=var(--stand-primary) orientation={boundary_orientation}/>  \n    {/if}\n    <Container>\n      <Row>\n        <Col sm=12 lg={{size:8, offset:2}}>\n          <div class=\"section-copy\">\n            <Text headline={summary.section_6_headline} {color}/>\n          </div>\n\n          <Accordion>\n            <AccordionItem active header=\"{summary.section_6_copy_1_headline}\">\n              <Text copy={summary.section_6_copy_1_content} color=var(--stand-tertiary)/>\n            </AccordionItem>\n            <AccordionItem header=\"{summary.section_6_copy_2_headline}\">\n              <Text copy={summary.section_6_copy_2_content} color=var(--stand-tertiary)/>\n            </AccordionItem>\n            <AccordionItem header=\"{summary.section_6_copy_3_headline}\">\n              <Text copy={summary.section_6_copy_3_content} color=var(--stand-tertiary)/>\n            </AccordionItem>\n            <AccordionItem header=\"{summary.section_6_copy_4_headline}\">\n              <Text copy={summary.section_6_copy_4_content} color=var(--stand-tertiary)/>\n            </AccordionItem>\n          </Accordion>\n        </Col>\n\n      </Row>\n    </Container>\n  </section>\n  <div id=\"form-wrap\"><iframe src=\"https://act.stand.earth/page/21659/data/1\" frameBorder=\"0\" class=\"inner_wrapper\"></iframe></div>\n  \n  <style>\n    .copy-recommendations {\n        padding-bottom:4rem;\n        background-position:cover;\n        width:100%;\n        background-position: center; /* Center the image */\n        background-repeat: no-repeat; /* Do not repeat the image */\n        background-size: cover;\n    }\n\n    .section-copy {\n      padding-top:30px;\n    }\n\n    .copy-content {\n      color: var(--stand-tertiary);\n    }\n\n    #form-wrap {\n      float: none;\n      width:100%;\n      clear: both;\n      position: relative;\n      min-height: 410px;\n      overflow: hidden;\n      display: block;\n    }\n\n    #form-wrap .inner_wrapper {\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n    }\n\n    @media (min-width: 992px) {\n      #form_wrap {\n          min-height: 265px;\n      }\n    }</style>\n  ",
    "<script>\n    import Icon from \"../helpers/Icon.svelte\";\n    import Boundary from \"../helpers/Boundary.svelte\";\n    export let headline, copy, color;\n  </script>\n  \n  \n  <section class=\"copy\">\n      <div class=\"copy-content\" style=\"--color: {color}\">\n        {#if headline}\n          <h1>{headline}</h1>\n        {/if}\n        {#if copy}\n        <p>{@html copy}</p>\n        {/if}\n    </div>\n  </section>\n  \n  <style>\n    .copy {\n        padding-bottom:2rem;\n    }\n\n    .copy-content {\n        color:var(--color);\n    }</style>\n  ",
    "<script>\n  import wordmark from \"../../svg/stand/logo.svg\";\n  import Boundary from \"../helpers/Boundary.svelte\";\n\n  const links = [\n    { name: \"about\", url: \"https://stand.earth/about-us\" },\n    { name: \"facebook\", url: \"https://facebook.com/standearth/\" },\n    { name: \"twitter\", url: \"https://twitter.com/standearth/\" },\n    {\n      name: \"instagram\",\n      url: \"https://www.instagram.com/stand.earth\",\n    }\n  ];\n\n\n</script>\n\n<footer>\n  <Boundary left_spacing={48} color=\"var(--stand-primary)\" orientation=\"triangle\"/>    \n  <section class=\"about\">\n    <div class=\"wordmark\">\n      <a href=\"https://stand.earth\">{@html wordmark}</a>\n    </div>\n    <p>\n      <a href=\"https://stand.earth\">Stand.earth</a> is an advocacy organization that brings people together to demand that corporations\n        and governments put people and the environment first.\n    </p>\n  </section>\n  <section class=\"links\">\n    <ul>\n      {#each links as link}\n        <li>\n          <a href=\"{link.url}\">\n            <!-- TODO icon -->\n            <span>{link.name.toUpperCase()}</span>\n          </a>\n        </li>\n      {/each}\n    </ul>\n  </section>\n</footer>\n\n<style>\n  footer {\n    background-color: var(--gray-light);\n    color: var(--stand-tertiary);\n    font-family: var(--sans);\n    padding-top: 0px;\n    padding-bottom: 1em;\n  }\n\n\n  footer p {\n    max-width:800px;\n    margin-left:auto;\n    margin-right:auto;\n  }\n\n  a,\n  a:visited,\n  a:hover {\n    color: var(--stand-tertiary);\n  }\n\n  .wordmark {\n    max-width: 10em;\n    margin: 1em auto;\n  }\n\n  .about {\n    margin: 3rem auto;\n    margin-top: 0;\n    text-align: center;\n  }\n\n  .links ul {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n  }\n\n  .links li {\n    display: flex;\n    padding: 0.5em 1em;\n  }\n\n  .links a {\n    display: flex;\n    border: none;\n    align-items: center;\n    text-decoration: none;\n  }\n\n  .links span {\n    margin-left: 0.5em;\n  }\n\n  @media only screen and (min-width: 30em) {\n    .story {\n      width: 50%;\n      padding: 0 1em;\n    }\n  }\n\n  @media only screen and (min-width: 50em) {\n    .story {\n      width: 25%;\n      padding: 0 1em;\n    }\n  }</style>\n",
    "<script>\n  import wordmark from \"../../svg/stand/logo_white.svg\";\n</script>\n\n<header>\n  <div class=\"wordmark\">\n    <a href=\"https://stand.earth\">{@html wordmark}</a>\n  </div>\n  <div class=\"take-action\">\n    <a href=\"https://stand.earth\"><button>TAKE ACTION</button></a>\n  </div>\n</header>\n\n<style>\n  header { \n    min-width:350px;\n    height:60px;\n    background: rgb(0,0,0);\n    background: linear-gradient(0deg, rgba(0,0,0,0) 0%, rgba(0,0,0,0.4) 100%);\n  }\n\n  .wordmark {\n    max-width: 10em;\n    float:left;\n    padding-left:30px;\n  }\n\n  .take-action {\n    float:right;\n    padding-right:30px;\n    padding-top:12px;  \n  }\n\n  .wordmark a {\n    border: none;\n    color: var(--fg);\n  }\n\n  .wordmark svg {\n    max-width:150px;\n  }\n\n  .wordmark a:hover {\n    background-color: transparent;\n  }</style>\n"
  ],
  "names": [],
  "mappings": "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"
}